version: '3'

x-app: &app
  build:
    context: .
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
  image: anycable-rails-demo-dev:1.0.0
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - packs:/app/public/packs
  environment: &backend_environment
    <<: *env
    REDIS_URL: redis://redis:6379/
    CHROME_URL: http://chrome:3333
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEB_CONCURRENCY: 1
    HISTFILE: /app/log/.bash_history
  depends_on: &backend_depends_on
    redis:
      condition: service_healthy

services:
  db:
    restart: always
    image: mysql:5.7
    volumes:
      - mysql-db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: root
    ports:
      - 3306:3306

  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'
    depends_on:
      - db
      - redis

  redis:
    image: redis:5.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  ws:
    image: anycable/anycable-go:1.0
    ports:
      - '8080:8080'
    environment:
      ANYCABLE_HOST: "0.0.0.0"
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: anycable:50051
      ANYCABLE_DEBUG: 1
    depends_on:
      redis:
        condition: service_healthy

  anycable:
    <<: *backend
    command: bundle exec anycable
    environment:
      <<: *backend_environment
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: 0.0.0.0:50051
      ANYCABLE_DEBUG: 1
    ports:
      - '50051'
    depends_on:
      <<: *backend_depends_on
      ws:
        condition: service_started

  chrome:
    image: browserless/chrome:1.31-chrome-stable
    ports:
      - '3333:3333'
    environment:
      PORT: 3333
      # Set connection timeout for debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      CONNECTION_TIMEOUT: 600000

volumes:
  mysql-db:
  bundle:
  redis:
  node_modules:
  rails_cache:
  packs: